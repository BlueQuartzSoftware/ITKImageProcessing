#pragma once

/* ============================================================================
 * Copyright (c) 2009-2019 BlueQuartz Software, LLC
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice, this
 * list of conditions and the following disclaimer in the documentation and/or
 * other materials provided with the distribution.
 *
 * Neither the name of BlueQuartz Software, the US Air Force, nor the names of its
 * contributors may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The code contained herein was partially funded by the following contracts:
 *    United States Air Force Prime Contract FA8650-10-D-5210
 *
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

#pragma once

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1

/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 *
 * THIS FILE IS AUTO GENERATED AT CMAKE TIME. DO NOT EDIT THIS FILE. EDIT THE ORIGINAL TEMPLATE FILE
 * LOCATED AT @PROJECT_NAME@/Test/TestFileLocations.h.in
 *
 *
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  */

namespace UnitTest
{
inline const QString DataDir("@DREAM3D_DATA_DIR@");
inline const QString TestTempDir("@TEST_TEMP_DIR@");
inline const QString DREAM3DProjDir("@DREAM3DProj_SOURCE_DIR@");
inline const QString ITKImageProcessingSourceDir("@ITKImageProcessing_SOURCE_DIR@");
inline const QString ITKImageProcessingDataDir("@ITKImageProcessing_SOURCE_DIR@/Data");

namespace ITKImageProcessingReaderTest
{
inline const QString METAIOInputTestFile("@TEST_TEMP_DIR@/METAIOFile.mha");
inline const QString TIFFIOInputTestFile("@TEST_TEMP_DIR@/TIFFIOFile.tif");
inline const QString PNGIOInputTestFile("@TEST_TEMP_DIR@/PNGIOFile.png");
inline const QString NRRDIOInputTestFile("@TEST_TEMP_DIR@/NRRDIOFile.nrrd");
inline const QString SCIFIOInputTestFile("@TEST_TEMP_DIR@/SCIFIOFile.tif");
inline const QString MRCIOInputTestFile("@TEST_TEMP_DIR@/MRCFile.mrc");
inline const QString NonExistentInputTestFile("@TEST_TEMP_DIR@/NotHere.ghost");
} // namespace ITKImageProcessingReaderTest

namespace ITKImportImageStackTest
{
inline const QString StackInputTestDir("@DREAM3D_DATA_DIR@/Data/Image");
} // namespace ITKImportImageStackTest

namespace ITKImageProcessingWriterTest
{
inline const QString OutputBaseFile("@TEST_TEMP_DIR@/OutputBaseFile");
} // namespace ITKImageProcessingWriterTest

namespace ITKBinaryThresholdTest
{
inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
} // namespace ITKBinaryThresholdTest

namespace AxioVisionV4ToTileConfigurationTest
{
inline const QString InputFile("@ITKImageProcessing_SOURCE_DIR@/Test/TestFiles/_meta.xml");
inline const QString ExemplarOutputFile("@ITKImageProcessing_SOURCE_DIR@/Test/TestFiles/TileConfiguration.txt");
inline const QString OutputFile("@TEST_TEMP_DIR@/TileConfiguration.txt");
} // namespace AxioVisionV4ToTileConfigurationTest

namespace ImportZenInfoMontageTest
{
inline const QString ZenInfoFile("@ITKImageProcessing_SOURCE_DIR@/Data/ITKImageProcessing/Montage/SampleMosaic/SampleMosaic_Info.xml");
inline const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/ZenInfoImportTest.dream3d");
} // namespace ImportZenInfoMontageTest

namespace ImportAxioVisionV4MontageTest
{
inline const QString AxioVisionMetaXmlFile("@ITKImageProcessing_SOURCE_DIR@/Data/ITKImageProcessing/Montage/SampleMosaic/_meta.xml");
inline const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/AxioVisionMetaXmlTest.dream3d");
} // namespace ImportAxioVisionV4MontageTest

namespace ImportFijiConfigTest
{
inline const QString InputFile("@ITKImageProcessing_SOURCE_DIR@/Data/ITKImageProcessing/Montage/SampleMosaic/TileConfiguration.txt");
inline const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/FijiConfigTest.dream3d");
} // namespace ImportFijiConfigTest

namespace ImportRobometMontage
{
// Input File & Constants
inline const QString InputFile("@ITKImageProcessing_SOURCE_DIR@/Data/ITKImageProcessing/Montage/0938410_ Mosaic Focus Details.csv");
inline const QString InputFilePrefix("0938410_");
inline const QString InputFileExtension("bmp");
// Output Files
inline const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/RoboMetImportTest.dream3d");
} // namespace ImportRobometMontage

} // namespace UnitTest

namespace ZeissImport
{
namespace Tools
{
inline const QString TagsTextFile("@ITKImageProcessing_SOURCE_DIR@/ZVI_Tags.txt");
inline const QString ZeissTagMappingConstantsFile("@ITKImageProcessing_SOURCE_DIR@/ZeissXML/ZeissTagMappingConstants.h");
inline const QString ZeissInitIdNameMapFile("@ITKImageProcessing_SOURCE_DIR@/ZeissXML/ZeissTagMapping_InitMaps.cpp");
} // namespace Tools
} // namespace ZeissImport
